Aprendemos que existem elementos que podem conter outros elementos. As <div> são um exemplo de elemento contêiner. 

O significado de contêiner (versão do Inglês container) é simples e direto: " aquele que contém coisas ". Quando você vai centralizar verticalmente uma caixa, é necessário ter a presença de um Container e de um Conteúdo.

Quando queremos centralizar blocos horizontalmente, aprendemos a usar o margin: auto; nas folhas de estilo. Mas como fazer a centralização vertical?

Considerando que temos um elemento dentro do outro e queremos centralizar verticalmente o elemento interno, devemos:

Atribuir uma classificação (id ou class) para ambos os elementos, pai e filho...

Posteriormente configurar o elemento pai com um "position: relative" e logo após configurar o elemento filho com um "position: absolute".

No elemento filho, configurar ambas as Propriedades Auxiliares do position usadas nesse caso, left e top, com um valor de 50% - Feito isso, a nossa caixa interna será centralizada verticalmente. 

É IMPORTANTE DESTACAR: Com essa configuração, o elemento interno realmente será alinhado pelo centro, mas tendo como referência o CANTO SUPERIOR ESQUERDO DA CAIXA FILHO... resultando especificamente no alinhamento desse ponto (canto superior esquerdo da box) e não da caixa como um todo.

Para resolver isso, devemos mudar a posição do "ponto de alinhamento" da caixa filho para o CENTRO da box. Sendo que por padrão, como já vimos, esse ponto é no canto superior esquerdo. 

Para transformar o "ponto de alinhamento" de uma caixa (mover a caixa), usamos a Propriedade de Estilo " transform ".

Utilizando a propriedade transform é possível manipular visualmente um elemento (mover, rotacionar, dimensionar e etc). 

As funções mais usadas para o transform são: rotate, scale, skew e translate. Para centralizar o "ponto de alinhamento" na nossa box, iremos usar a função "translate".

translate - A função de translate serve para mover o elemento para os lados ou para cima/baixo. Mudar o seu "ponto de alinhamento"... A sintaxe pode ser especifica para um dos eixos x/y ( translateX ou translateY ), como pode ser apenas translate, abrangendo os dois eixos ( x, y ). Obs.: Para ir para o lado esquerdo ou para cima, use valores negativos.

rotate - Como o nome já sugere, é utilizada para rotacionar o elemento, de 0 a 360 graus. Utilizando valores positivos, a rotação será realizada no sentido horário e, utilizando valores negativos, no sentido Anti-horário.

scale - Utilizado para redimensionar os elementos, tendo como escala padrão o valor "1". Valores maiores que 1, aumentarão o tamanho do elemento, e valores menores que 1 diminuirão sua escala.

skew - É utilizado para "distorcer" os elementos, alterando os ângulos.

Nota: A propriedade de estilo "transform" e suas funções é muito utilizada juntamente com a pseudo-classe "hover" e com a propriedade de estilo "transition" para criar efeitos visuais.

Entendido o conceito do transform e suas funções, usaremos a seguinte declaração para mudar/centralizar o "ponto de alinhamento" da nossa box filho: 

transform: translate(-50%, -50%);

Como queremos posicionamento centralizado, na função "translate" inserimos valores negativos de "-50% -50%" para deslocar o "ponto de alinhamento" da nossa caixa filho (metade do container... centro). O PRIMEIRO VALOR representa o deslocamento horizontal do ponto, e o SEGUNDO VALOR representa o deslocamento vertical desse ponto. 

Utilizamos valores em % para ajustar o ponto de referência exatamente no meio da box (-50% -50%), mas dependendo do que você quer fazer, também pode usar valores em px ou outra unidade de medida.

Lembrando que aquilo que de fato está centralizando a caixa são os Positions e suas Propriedades Auxiliares (left e top), a propriedade transform apenas mudou o ponto de referência da caixa filho.

Segue abaixo um exemplo do código completo, tanto da box pai quanto da box filho: 

        section#container {

            position: relative;
            height: 100vh;
            
            background-color: purple;
            background-image: url(imagens/target001.png);
            background-size: 100% 100%;
        }
        article#conteudo {

            min-height: 200px;
            width: 400px;
            
            position: absolute;
            left: 50%;
            top: 50%;

            background-color: yellow;
            background-image: url(imagens/target001.png);
            background-size: 100% 100%;

            transform: translate(-50%, -50%);
        }

Essa é apenas uma das técnicas de centralização de conteúdo, existem outras que requerem aprender conceitos mais aprofundados das folhas de estilo, como as caixas flexíveis (Flexbox).